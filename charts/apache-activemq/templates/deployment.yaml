apiVersion: apps/v1
kind: Deployment
metadata:
  name: activemq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: activemq
  template:
    metadata:
      labels:
        app: activemq
        activemq_cluster: activemq-cluster-1
    spec:
      containers:
      - name: activemq
        image: {{ .Values.image }}
        ports:
          - containerPort: 1099
            name: jmx
          - containerPort: 8161
            name: web-ui
        env:
          - name: ACTIVEMQ_JMX
            value: "1099"
          - name: ACTIVEMQ_OPTS
            value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=1099 -Dcom.sun.management.jmxremote.rmi.port=1099 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false"
      - name: jmx-exporter
        image: bitnami/jmx-exporter:0.19.0
        command:
          - java
          - -jar
          - jmx_prometheus_httpserver.jar
        args:
          - "9000" 
          - config.yaml
        ports:
          - containerPort: 9000
            name: prometheus
        volumeMounts:
        - mountPath: /opt/bitnami/jmx-exporter/config.yaml
          subPath: config.yaml
          name: jmx-exporter-config
      volumes:
      - name: jmx-exporter-config
        configMap:
          name: jmx-exporter-config
          items:
          - key: config.yaml
            path: config.yaml
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: activemq-loadgen
  namespace: {{ .Values.loadGeneratorNamespace }}
spec:
  schedule: "*/5 * * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      parallelism: 1
      template:
        spec:
          containers:
          - name: activemq-loadgen
            image: {{ .Values.loadGeneratorImage }}
            imagePullPolicy: IfNotPresent
          restartPolicy: Never
