apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |
    server {
        listen       8080;
        server_name  localhost;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        location /status {
            stub_status on;
            access_log  on;           
            allow all;
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: varnish-secret
data:
  # Use a real secret in production, not a configmap.
  secret: |
    replace-with-real-secret
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: custom-varnish-cache-vcl
  labels:
    helm.sh/chart: varnish-cache-0.1.0
    app.kubernetes.io/name: varnish-cache
    app.kubernetes.io/instance: custom
    app.kubernetes.io/version: "7.4.2"
    app.kubernetes.io/managed-by: Helm
data:
  default.vcl: |
    vcl 4.1;

    probe health {
        .url = "/";
        .timeout = 2s;
        .interval = 5s;
        .window = 5;
        .threshold = 3;
    }

    backend default {
        .host = "localhost";
        .port = "8080";
        .probe = health;
    }

    sub vcl_recv {
        # Force a cache miss to ensure backend requests
        return (pass);
    }

    sub vcl_backend_response {
        set beresp.ttl = 10s;
    }

    sub vcl_deliver {
        if (obj.hits > 0) {
            set resp.http.X-Cache = "HIT";
        } else {
            set resp.http.X-Cache = "MISS";
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alloy-varnish-log-config
  labels:
    alloy-config: varnish-logs
data:
  config.alloy: |
    logging {
      level  = "info"
      format = "logfmt"
    }

    loki.write "logs_integrations" {
      endpoint {
        url = "http://loki.default.svc.cluster.local:3100/loki/api/v1/push"

      }
      external_labels = {"cluster" = "my-cluster"}
    }

    local.file_match "logs_integrations_integrations_varnish_cache" {
      path_targets = [{
        __address__ = "localhost",
        __path__    = "/var/log/varnish/varnishncsa-*.log",
        instance    = "custom-varnish-cache.sample-apps.svc.cluster.local:9131",
        job         = "integrations/varnish-cache",
      }]
    }

    loki.source.file "logs_integrations_integrations_apache_airflow" {
      targets    = local.file_match.logs_integrations_integrations_varnish_cache.targets
      forward_to = [loki.write.logs_integrations.receiver]
    }
---
